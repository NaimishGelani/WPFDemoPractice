<UserControl x:Class="WPFDemoPractice.UserControls.DashBoard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFDemoPractice.UserControls"
             xmlns:vm="clr-namespace:WPFDemoPractice.ViewModel"
             xmlns:conveter="clr-namespace:WPFDemoPractice.Converter"
             xmlns:model="clr-namespace:WPFDemoPractice.Model"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <conveter:RadioButtonConverter x:Key="RadioButtonConverter"></conveter:RadioButtonConverter>
        <model:StudentsModel x:Key="StudentModel"></model:StudentsModel>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical" Margin="0,0,0,5">
            <GroupBox Header="Student Form" FontSize="14px" BorderBrush="Black" BorderThickness="2"  Margin="10">

                <Grid Height="350">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <!--  <RowDefinition Height="1*"/>-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="StudentName" HorizontalAlignment="Left"  
                       VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding StudentName, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="0" Grid.Column="1" x:Name="TextBoxStudentName" Height="27" 
                      Margin="5"  Width="300"  HorizontalAlignment="Left"/>

                    <Label Content="Surname" HorizontalAlignment="Left" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                    <TextBox Grid.Row="1" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding Surname, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Column="1" x:Name="TextBoxSurname" Height="27"    Margin="5"  Width="300" HorizontalAlignment="Left"/>

                    <Label Content="FatherName" HorizontalAlignment="Left" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding FatherName, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="2"  Grid.Column="1" x:Name="TextBoxFatherName" Height="27"   Margin="5"  Width="300" HorizontalAlignment="Left"/>

                    <Label Content="DOB" HorizontalAlignment="Left" VerticalContentAlignment="Center"  Grid.Row="3" Grid.Column="0"/>
                    <DatePicker SelectedDate="{Binding Dob}" DisplayDateEnd="{Binding Today , StringFormat=dd-MM-yyyy}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding Dob,UpdateSourceTrigger=PropertyChanged,TargetNullValue='',  Mode=TwoWay, StringFormat=dd/MM/yyyy}" Grid.Row="3" x:Name="DoBDatePicker" 
                     Grid.Column="1" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Center" Width="300"/>

                    <Label Content="Age" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="4" Grid.Column="0"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding Age, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="4" Grid.Column="1" x:Name="TextBoxAge" Height="27" 
                       Margin="5" Width="70" HorizontalAlignment="Left"/>

                    <!--<TextBlock Grid.Row="" Grid.Column="1" x:Name="TextBlockId" 
                       Visibility="Hidden" Text="{Binding Path=StudentRecord.Id, Mode=TwoWay}"/>-->
                    <Label Content="Gender" HorizontalAlignment="Left" VerticalContentAlignment="Center" Grid.Row="5" Grid.Column="0"/>
                    <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                        <RadioButton  IsChecked="{Binding Gender , Converter={StaticResource RadioButtonConverter},ConverterParameter=Male}" Margin="10,5,0,0" GroupName="MCSites" >Male</RadioButton>
                        <RadioButton  IsChecked="{Binding Gender , Converter={StaticResource RadioButtonConverter},ConverterParameter=Fimale}" Margin="10,5,0,0" GroupName="MCSites" >Female</RadioButton>
                        <RadioButton  IsChecked="{Binding Gender , Converter={StaticResource RadioButtonConverter},ConverterParameter=Other}" Margin="10,5,0,0" GroupName="MCSites" >Other</RadioButton>
                    </StackPanel>

                    <Label Content="Address" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="6" Grid.Column="0" />
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding Address, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="6" Grid.Column="1" x:Name="TextBoxAddress" Height="27" 
                      Margin="6" Width="300" HorizontalAlignment="Left"/>

                    <Label Content="ContactNo" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="7" Grid.Column="0" />
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding ContactNo, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="7" Grid.Column="1" x:Name="TextBoxContact" Height="27"
                       Margin="5" Width="300" HorizontalAlignment="Left"/>

                    <Label Content="Standard" HorizontalAlignment="Left" VerticalContentAlignment="Center"  Grid.Row="8" Grid.Column="0" />
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" Text="{Binding Standard, UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}" Grid.Row="8" Grid.Column="1" x:Name="TextBoxStandard" Height="27" Margin="5" Width="300" HorizontalAlignment="Left"/>
                </Grid>
            </GroupBox>
            <StackPanel Height="40" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="ButtonSave" Content="Save" Height="30" Width="80" Style="{DynamicResource ButtonStyle}"
                    Command="{Binding AddStudentCommand  }" Click="CreateEmployeeButton_Click"/>
                <Button x:Name="ButtonCancel" Content="Cancel" Height="30" Width="80" Click="CancelEmployeeButton_Click"
                    Command="{Binding ResetCommand}" Margin="5,0,10,0"/>
            </StackPanel>
            <StackPanel Height="400">
                <DataGrid x:Name="DataGridStudents" AutoGenerateColumns="False"  
                      ItemsSource="{Binding StudentList}" CanUserAddRows="False" Height="400" Margin="10">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter Property="FontSize" Value="20"></Setter>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="Blue" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="20"></Setter>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Name" Binding="{Binding Path=Id}" Visibility="Hidden"/>
                        <DataGridTextColumn Header="StudentName" Binding="{Binding Path=StudentName}" Width="100"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="Surname" Binding="{Binding Path=Surname}" Width="100"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="FatherName" Binding="{Binding Path=FatherName}" Width="100"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="DOB" Binding="{Binding Path=Dob}" Width="100"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="Age" Binding="{Binding Path=Age}" Width="125" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Standard" Binding="{Binding Path=Standard}" Width="125" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Gender" Binding="{Binding Path=Gender}" Width="125" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Contact" Binding="{Binding Path=ContactNo}" Width="125" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Address" Binding="{Binding Path=Address}" Width="180" IsReadOnly="True"/>
                        <DataGridTemplateColumn Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Select" x:Name="ButtonEdit" CommandParameter="{Binding Path=Id}"
                                        Command="{Binding Path=DataContext.EditCommand,RelativeSource={RelativeSource FindAncestor,
                                                AncestorType=Window}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Delete" x:Name="ButtonDelete" CommandParameter="{Binding Path=Id}"
                                        Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor,
                                                AncestorType=Window}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
